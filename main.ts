// tests go here; this will not be compiled when this package is used as an extension.
enum Config {
    Live, // Normal usage (but use turntable Jig to pretend it's on a buggy)
    Capture, // Acquire new test datasets, using turntable Jig
    Analyse, // Test & debug (dataset selection is preset in code below)
}
enum Task {
    Scan,
    SetNorth,
    Measure
}
function performSetup() {
    let result = 0
    switch (nextTask) {
        case Task.Scan:
            let scanTime = 6000 // ...to MANUALLY rotate turntable jig twice (SMOOOOTHLY!)
            basic.showString("S")
            basic.pause(1000)
            basic.showString("_")
            if (config == Config.Analyse) {
                heading.debugMode = true
                preloadDashboard() // 
            } 
            result = heading.scanClockwise(scanTime)
            if (result == 0) {
                basic.showIcon(IconNames.Yes)
                basic.pause(1000)
            } else {
                basic.showIcon(IconNames.Skull) // problem with scan data analysis
                basic.pause(1000)
                basic.showNumber(result)
                basic.pause(1000)
                basic.clearScreen()
                basic.showArrow(ArrowNames.West)
                nextTask = Task.Scan // restart with a fresh scan
            }
            basic.clearScreen()
            basic.showArrow(ArrowNames.West)
            nextTask = Task.SetNorth
            break

        case Task.SetNorth:
            basic.showString("N")
            basic.pause(1000)
            basic.clearScreen()
            result = heading.setNorth()
            spinRPM = heading.spinRate() // ...just out of interest
            basic.showNumber(Math.floor(spinRPM))
            basic.pause(1000)
            basic.showIcon(IconNames.Yes)
            basic.pause(500)
            basic.showLeds(`
                # # . # #
                # . . . #
                . . # . .
                # . . . #
                # # . # #
                `)
            basic.pause(500)
            basic.showArrow(ArrowNames.East)
            nextTask = Task.Measure
            break

        case Task.Measure: // Button A allows new North setting
            basic.showIcon(IconNames.No)
            basic.pause(1000)
            basic.clearScreen()
            basic.showArrow(ArrowNames.West)
            nextTask = Task.SetNorth // reset new North
            break
    }

}

function measure() {
    switch (nextTask) {
        // ? sequence error?
        case Task.SetNorth:
        case Task.Scan: // use button A to do a scan first
            for (let i = 0; i < 5; i++) {
                basic.clearScreen()
                basic.pause(100)
                basic.showArrow(ArrowNames.West)
            }
            break

        case Task.Measure: // OK, take a new heading measurement
            basic.pause(200)
            basic.clearScreen()
            basic.pause(50)
            let compass = heading.degrees()
            basic.showNumber(Math.floor(compass))
            basic.pause(500)
            // now MANUALLY move to next test-angle...
            basic.showLeds(`
                    # # . # #
                    # . . . #
                    . . . . .
                    # . . . #
                    # # . # #
                    `)
            basic.pause(200)
            break
    }

}

// rotate three-state configuration 
function nextConfig() {
    basic.showIcon(IconNames.No)
    basic.pause(500)
    basic.clearScreen()
    switch (config) {
        case Config.Live:
            config = Config.Analyse
            heading.debugMode = true
            basic.showString("A") // preload sample data for debugging...
            break
        case Config.Analyse:
            config = Config.Capture
            heading.debugMode = false
            basic.showString("C") // no buggy, but use live magnetometer
            break
        case Config.Capture:
            config = Config.Live
            heading.debugMode = false
            basic.showString("L")  // normal live operation
            break
    }
    basic.pause(1000)
    basic.clearScreen()
    basic.pause(200)
    nextTask = Task.Scan // new mode, so always start with a scan
    basic.showArrow(ArrowNames.West)
}

function preloadDashboard() {
    // first set up scanData captured from a sloping "dashboard" test-rig configuration
    // that presents only non-circular, elliptical views of the Spin-Circle
    heading.scanTimes.push(10324)
    heading.scanData.push([-25.253, -1.1420, 79.155])
    heading.scanTimes.push(10340)
    heading.scanData.push([-25.439, -0.9434, 79.014])
    heading.scanTimes.push(10356)
    heading.scanData.push([-25.621, -0.7299, 78.880])
    heading.scanTimes.push(10372)
    heading.scanData.push([-25.768, -0.5351, 78.764])
    heading.scanTimes.push(10388)
    heading.scanData.push([-25.941, -0.317, 78.651])
    heading.scanTimes.push(10404)
    heading.scanData.push([-26.132, -0.09327, 78.555])
    heading.scanTimes.push(10420)
    heading.scanData.push([-26.326, 0.1116, 78.47])
    heading.scanTimes.push(10436)
    heading.scanData.push([-26.496, 0.3448, 78.393])
    heading.scanTimes.push(10452)
    heading.scanData.push([-26.619, 0.5899, 78.319])
    heading.scanTimes.push(10468)
    heading.scanData.push([-26.757, 0.8003, 78.212])
    heading.scanTimes.push(10484)
    heading.scanData.push([-26.903, 1.0459, 78.13])
    heading.scanTimes.push(10500)
    heading.scanData.push([-27.029, 1.3080, 78.117])
    heading.scanTimes.push(10516)
    heading.scanData.push([-27.158, 1.5413, 78.047])
    heading.scanTimes.push(10532)
    heading.scanData.push([-27.268, 1.7736, 77.931])
    heading.scanTimes.push(10548)
    heading.scanData.push([-27.350, 1.9856, 77.819])
    heading.scanTimes.push(10564)
    heading.scanData.push([-27.43, 2.1924, 77.704])
    heading.scanTimes.push(10580)
    heading.scanData.push([-27.510, 2.4273, 77.579])
    heading.scanTimes.push(10596)
    heading.scanData.push([-27.564, 2.7271, 77.46])
    heading.scanTimes.push(10612)
    heading.scanData.push([-27.59, 3.0258, 77.328])
    heading.scanTimes.push(10628)
    heading.scanData.push([-27.600, 3.3125, 77.190])
    heading.scanTimes.push(10644)
    heading.scanData.push([-27.6, 3.6128, 77.090])
    heading.scanTimes.push(10660)
    heading.scanData.push([-27.63, 3.9069, 76.979])
    heading.scanTimes.push(10676)
    heading.scanData.push([-27.655, 4.2145, 76.85])
    heading.scanTimes.push(10692)
    heading.scanData.push([-27.683, 4.5214, 76.736])
    heading.scanTimes.push(10708)
    heading.scanData.push([-27.668, 4.8012, 76.630])
    heading.scanTimes.push(10724)
    heading.scanData.push([-27.610, 5.0501, 76.527])
    heading.scanTimes.push(10740)
    heading.scanData.push([-27.563, 5.3105, 76.426])
    heading.scanTimes.push(10756)
    heading.scanData.push([-27.481, 5.5937, 76.361])
    heading.scanTimes.push(10772)
    heading.scanData.push([-27.387, 5.8718, 76.294])
    heading.scanTimes.push(10788)
    heading.scanData.push([-27.313, 6.1187, 76.181])
    heading.scanTimes.push(10804)
    heading.scanData.push([-27.227, 6.3710, 76.038])
    heading.scanTimes.push(10820)
    heading.scanData.push([-27.141, 6.6401, 75.882])
    heading.scanTimes.push(10836)
    heading.scanData.push([-27.010, 6.9255, 75.7])
    heading.scanTimes.push(10852)
    heading.scanData.push([-26.879, 7.2180, 75.699])
    heading.scanTimes.push(10868)
    heading.scanData.push([-26.764, 7.4653, 75.664])
    heading.scanTimes.push(10884)
    heading.scanData.push([-26.594, 7.6913, 75.599])
    heading.scanTimes.push(10900)
    heading.scanData.push([-26.407, 7.9637, 75.447])
    heading.scanTimes.push(10916)
    heading.scanData.push([-26.236, 8.2640, 75.264])
    heading.scanTimes.push(10932)
    heading.scanData.push([-26.067, 8.5380, 75.157])
    heading.scanTimes.push(10948)
    heading.scanData.push([-25.886, 8.8013, 75.090])
    heading.scanTimes.push(10964)
    heading.scanData.push([-25.695, 9.0812, 74.990])
    heading.scanTimes.push(10980)
    heading.scanData.push([-25.467, 9.3491, 74.920])
    heading.scanTimes.push(10996)
    heading.scanData.push([-25.221, 9.5807, 74.887])
    heading.scanTimes.push(11012)
    heading.scanData.push([-24.990, 9.7722, 74.811])
    heading.scanTimes.push(11028)
    heading.scanData.push([-24.759, 9.9807, 74.683])
    heading.scanTimes.push(11044)
    heading.scanData.push([-24.515, 10.242, 74.494])
    heading.scanTimes.push(11060)
    heading.scanData.push([-24.267, 10.46, 74.309])
    heading.scanTimes.push(11076)
    heading.scanData.push([-24.007, 10.687, 74.213])
    heading.scanTimes.push(11092)
    heading.scanData.push([-23.744, 10.933, 74.150])
    heading.scanTimes.push(11108)
    heading.scanData.push([-23.478, 11., 74.093])
    heading.scanTimes.push(11124)
    heading.scanData.push([-23.229, 11.341, 73.995])
    heading.scanTimes.push(11140)
    heading.scanData.push([-22.948, 11.524, 73.893])
    heading.scanTimes.push(11156)
    heading.scanData.push([-22.60, 11.736, 73.826])
    heading.scanTimes.push(11172)
    heading.scanData.push([-22.264, 11.916, 73.758])
    heading.scanTimes.push(11188)
    heading.scanData.push([-21.937, 12.081, 73.710])
    heading.scanTimes.push(11204)
    heading.scanData.push([-21.586, 12.264, 73.658])
    heading.scanTimes.push(11220)
    heading.scanData.push([-21.253, 12.450, 73.612])
    heading.scanTimes.push(11236)
    heading.scanData.push([-20.969, 12.614, 73.602])
    heading.scanTimes.push(11252)
    heading.scanData.push([-20.650, 12.78, 73.56])
    heading.scanTimes.push(11268)
    heading.scanData.push([-20.300, 12.951, 73.495])
    heading.scanTimes.push(11284)
    heading.scanData.push([-20.041, 13.08, 73.423])
    heading.scanTimes.push(11300)
    heading.scanData.push([-19.769, 13.192, 73.345])
    heading.scanTimes.push(11316)
    heading.scanData.push([-19.458, 13.311, 73.253])
    heading.scanTimes.push(11332)
    heading.scanData.push([-19.14, 13.459, 73.150])
    heading.scanTimes.push(11348)
    heading.scanData.push([-18.764, 13.6, 73.076])
    heading.scanTimes.push(11364)
    heading.scanData.push([-18.369, 13.882, 73.034])
    heading.scanTimes.push(11380)
    heading.scanData.push([-17.983, 14.058, 72.990])
    heading.scanTimes.push(11396)
    heading.scanData.push([-17.657, 14.152, 72.923])
    heading.scanTimes.push(11412)
    heading.scanData.push([-17.339, 14.240, 72.809])
    heading.scanTimes.push(11428)
    heading.scanData.push([-16.950, 14.339, 72.686])
    heading.scanTimes.push(11444)
    heading.scanData.push([-16.570, 14.410, 72.587])
    heading.scanTimes.push(11460)
    heading.scanData.push([-16.183, 14.474, 72.549])
    heading.scanTimes.push(11476)
    heading.scanData.push([-15.792, 14.540, 72.533])
    heading.scanTimes.push(11492)
    heading.scanData.push([-15.421, 14.613, 72.460])
    heading.scanTimes.push(11508)
    heading.scanData.push([-15.056, 14.706, 72.394])
    heading.scanTimes.push(11524)
    heading.scanData.push([-14.677, 14.804, 72.340])
    heading.scanTimes.push(11540)
    heading.scanData.push([-14.292, 14.846, 72.277])
    heading.scanTimes.push(11556)
    heading.scanData.push([-13.935, 14.847, 72.227])
    heading.scanTimes.push(11572)
    heading.scanData.push([-13.555, 14.874, 72.194])
    heading.scanTimes.push(11588)
    heading.scanData.push([-13.124, 14.897, 72.190])
    heading.scanTimes.push(11604)
    heading.scanData.push([-12.685, 14.873, 72.193])
    heading.scanTimes.push(11620)
    heading.scanData.push([-12.2, 14.878, 72.143])
    heading.scanTimes.push(11636)
    heading.scanData.push([-11.77, 14.928, 72.052])
    heading.scanTimes.push(11652)
    heading.scanData.push([-11.358, 14.914, 71.982])
    heading.scanTimes.push(11668)
    heading.scanData.push([-10.936, 14.863, 71.991])
    heading.scanTimes.push(11684)
    heading.scanData.push([-10.517, 14.869, 72.050])
    heading.scanTimes.push(11700)
    heading.scanData.push([-10.129, 14.886, 72.138])
    heading.scanTimes.push(11716)
    heading.scanData.push([-9.7688, 14.883, 72.25])
    heading.scanTimes.push(11732)
    heading.scanData.push([-9.4062, 14., 72.306])
    heading.scanTimes.push(11748)
    heading.scanData.push([-9.0098, 14.718, 72.299])
    heading.scanTimes.push(11764)
    heading.scanData.push([-8.5825, 14.671, 72.339])
    heading.scanTimes.push(11780)
    heading.scanData.push([-8.1802, 14.594, 72.414])
    heading.scanTimes.push(11796)
    heading.scanData.push([-7.8058, 14.432, 72.456])
    heading.scanTimes.push(11812)
    heading.scanData.push([-7.4384, 14.259, 72.469])
    heading.scanTimes.push(11828)
    heading.scanData.push([-7.043, 14.101, 72.507])
    heading.scanTimes.push(11844)
    heading.scanData.push([-6.6443, 13.950, 72.541])
    heading.scanTimes.push(11860)
    heading.scanData.push([-6.2863, 13.806, 72.552])
    heading.scanTimes.push(11876)
    heading.scanData.push([-5.9268, 13.688, 72.610])
    heading.scanTimes.push(11892)
    heading.scanData.push([-5.5394, 13.55, 72.667])
    heading.scanTimes.push(11908)
    heading.scanData.push([-5.1472, 13.410, 72.687])
    heading.scanTimes.push(11924)
    heading.scanData.push([-4.822, 13.274, 72.726])
    heading.scanTimes.push(11940)
    heading.scanData.push([-4.505, 13.103, 72.820])
    heading.scanTimes.push(11956)
    heading.scanData.push([-4.1373, 12.915, 72.945])
    heading.scanTimes.push(11972)
    heading.scanData.push([-3.7692, 12.723, 72.993])
    heading.scanTimes.push(11988)
    heading.scanData.push([-3.426, 12.515, 72.971])
    heading.scanTimes.push(12004)
    heading.scanData.push([-3.1408, 12.326, 73.032])
    heading.scanTimes.push(12020)
    heading.scanData.push([-2.845, 12.133, 73.144])
    heading.scanTimes.push(12036)
    heading.scanData.push([-2.498, 11.918, 73.248])
    heading.scanTimes.push(12052)
    heading.scanData.push([-2.1690, 11.683, 73.375])
    heading.scanTimes.push(12068)
    heading.scanData.push([-1.9012, 11.455, 73.524])
    heading.scanTimes.push(12084)
    heading.scanData.push([-1.6827, 11.253, 73.679])
    heading.scanTimes.push(12100)
    heading.scanData.push([-1.4034, 10.990, 73.787])
    heading.scanTimes.push(12116)
    heading.scanData.push([-1.0844, 10.718, 73.867])
    heading.scanTimes.push(12132)
    heading.scanData.push([-0.8461, 10.489, 73.946])
    heading.scanTimes.push(12148)
    heading.scanData.push([-0.634, 10.2, 74.005])
    heading.scanTimes.push(12164)
    heading.scanData.push([-0.4082, 9.9634, 74.053])
    heading.scanTimes.push(12180)
    heading.scanData.push([-0.1822, 9.7419, 74.150])
    heading.scanTimes.push(12196)
    heading.scanData.push([0.0167, 9.492, 74.309])
    heading.scanTimes.push(12212)
    heading.scanData.push([0.165, 9.2205, 74.421])
    heading.scanTimes.push(12228)
    heading.scanData.push([0.3487, 8.9649, 74.512])
    heading.scanTimes.push(12244)
    heading.scanData.push([0.4941, 8.6859, 74.620])
    heading.scanTimes.push(12260)
    heading.scanData.push([0.5558, 8.411, 74.70])
    heading.scanTimes.push(12276)
    heading.scanData.push([0.6453, 8.1818, 74.857])
    heading.scanTimes.push(12292)
    heading.scanData.push([0.6795, 7.9246, 75.086])
    heading.scanTimes.push(12308)
    heading.scanData.push([0.6798, 7.6121, 75.301])
    heading.scanTimes.push(12324)
    heading.scanData.push([0.7119, 7.3206, 75.451])
    heading.scanTimes.push(12340)
    heading.scanData.push([0.7017, 6.987, 75.536])
    heading.scanTimes.push(12356)
    heading.scanData.push([0.6666, 6.6132, 75.594])
    heading.scanTimes.push(12372)
    heading.scanData.push([0.6812, 6.3112, 75.6])
    heading.scanTimes.push(12388)
    heading.scanData.push([0.7263, 6.0610, 75.831])
    heading.scanTimes.push(12404)
    heading.scanData.push([0.7546, 5.7932, 75.927])
    heading.scanTimes.push(12420)
    heading.scanData.push([0.7471, 5.4963, 75.984])
    heading.scanTimes.push(12436)
    heading.scanData.push([0.7080, 5.1995, 76.082])
    heading.scanTimes.push(12452)
    heading.scanData.push([0.6458, 4.9088, 76.184])
    heading.scanTimes.push(12468)
    heading.scanData.push([0.5631, 4.5841, 76.304])
    heading.scanTimes.push(12484)
    heading.scanData.push([0.4411, 4.2824, 76.432])
    heading.scanTimes.push(12500)
    heading.scanData.push([0.2913, 3.9794, 76.556])
    heading.scanTimes.push(12516)
    heading.scanData.push([0.161, 3.6847, 76.65])
    heading.scanTimes.push(12532)
    heading.scanData.push([0.04212, 3.4545, 76.734])
    heading.scanTimes.push(12548)
    heading.scanData.push([-0.06640, 3.184, 76.872])
    heading.scanTimes.push(12564)
    heading.scanData.push([-0.2053, 2.8867, 77.055])
    heading.scanTimes.push(12580)
    heading.scanData.push([-0.3442, 2.6547, 77.143])
    heading.scanTimes.push(12596)
    heading.scanData.push([-0.4718, 2.4086, 77.153])
    heading.scanTimes.push(12612)
    heading.scanData.push([-0.6474, 2.1129, 77.241])
    heading.scanTimes.push(12628)
    heading.scanData.push([-0.8398, 1.8365, 77.39])
    heading.scanTimes.push(12644)
    heading.scanData.push([-1.0753, 1.564, 77.510])
    heading.scanTimes.push(12660)
    heading.scanData.push([-1.3151, 1.2966, 77.625])
    heading.scanTimes.push(12676)
    heading.scanData.push([-1.5548, 1.0655, 77.776])
    heading.scanTimes.push(12692)
    heading.scanData.push([-1.8519, 0.8476, 77.840])
    heading.scanTimes.push(12708)
    heading.scanData.push([-2.1488, 0.6294, 77.828])
    heading.scanTimes.push(12724)
    heading.scanData.push([-2.4463, 0.4369, 77.890])
    heading.scanTimes.push(12740)
    heading.scanData.push([-2.7836, 0.2078, 77.978])
    heading.scanTimes.push(12756)
    heading.scanData.push([-3.1635, -0.04603, 78.019])
    heading.scanTimes.push(12772)
    heading.scanData.push([-3.5290, -0.298, 78.096])
    heading.scanTimes.push(12788)
    heading.scanData.push([-3.8964, -0.5736, 78.193])
    heading.scanTimes.push(12804)
    heading.scanData.push([-4.2767, -0.8380, 78.267])
    heading.scanTimes.push(12820)
    heading.scanData.push([-4.6239, -1.0528, 78.316])
    heading.scanTimes.push(12836)
    heading.scanData.push([-4.9939, -1.242, 78.347])
    heading.scanTimes.push(12852)
    heading.scanData.push([-5.3367, -1.4290, 78.396])
    heading.scanTimes.push(12868)
    heading.scanData.push([-5.6509, -1.6391, 78.493])
    heading.scanTimes.push(12884)
    heading.scanData.push([-6.0294, -1.8227, 78.573])
    heading.scanTimes.push(12900)
    heading.scanData.push([-6.4200, -1.9387, 78.602])
    heading.scanTimes.push(12916)
    heading.scanData.push([-6.8364, -2.0645, 78.648])
    heading.scanTimes.push(12932)
    heading.scanData.push([-7.2944, -2.1521, 78.703])
    heading.scanTimes.push(12948)
    heading.scanData.push([-7.7451, -2.2334, 78.739])
    heading.scanTimes.push(12964)
    heading.scanData.push([-8.2092, -2.3861, 78.760])
    heading.scanTimes.push(12980)
    heading.scanData.push([-8.6714, -2.557, 78.772])
    heading.scanTimes.push(12996)
    heading.scanData.push([-9.0933, -2.6943, 78.810])
    heading.scanTimes.push(13012)
    heading.scanData.push([-9.5183, -2.8063, 78.910])
    heading.scanTimes.push(13028)
    heading.scanData.push([-9.9781, -2.9149, 79.013])
    heading.scanTimes.push(13044)
    heading.scanData.push([-10.44, -3.0208, 79.056])
    heading.scanTimes.push(13060)
    heading.scanData.push([-10.887, -3.1504, 79.075])
    heading.scanTimes.push(13076)
    heading.scanData.push([-11.299, -3.2945, 79.0])
    heading.scanTimes.push(13092)
    heading.scanData.push([-11.7, -3.3862, 79.167])
    heading.scanTimes.push(13108)
    heading.scanData.push([-12.197, -3.4377, 79.215])
    heading.scanTimes.push(13124)
    heading.scanData.push([-12.672, -3.4845, 79.234])
    heading.scanTimes.push(13140)
    heading.scanData.push([-13.151, -3.5275, 79.243])
    heading.scanTimes.push(13156)
    heading.scanData.push([-13.614, -3.5731, 79.213])
    heading.scanTimes.push(13172)
    heading.scanData.push([-14.056, -3.6015, 79.166])
    heading.scanTimes.push(13188)
    heading.scanData.push([-14.479, -3.5945, 79.130])
    heading.scanTimes.push(13204)
    heading.scanData.push([-14.899, -3.6020, 79.163])
    heading.scanTimes.push(13220)
    heading.scanData.push([-15.307, -3.6279, 79.192])
    heading.scanTimes.push(13236)
    heading.scanData.push([-15.720, -3.5986, 79.226])
    heading.scanTimes.push(13252)
    heading.scanData.push([-16.142, -3.5332, 79.302])
    heading.scanTimes.push(13268)
    heading.scanData.push([-16.527, -3.5001, 79.378])
    heading.scanTimes.push(13284)
    heading.scanData.push([-16.899, -3.4891, 79.415])
    heading.scanTimes.push(13300)
    heading.scanData.push([-17.264, -3.4459, 79.436])
    heading.scanTimes.push(13316)
    heading.scanData.push([-17.670, -3.3874, 79.407])
    heading.scanTimes.push(13332)
    heading.scanData.push([-18.118, -3.347, 79.337])
    heading.scanTimes.push(13348)
    heading.scanData.push([-18.540, -3.3168, 79.299])
    heading.scanTimes.push(13364)
    heading.scanData.push([-18.919, -3.3091, 79.264])
    heading.scanTimes.push(13380)
    heading.scanData.push([-19.251, -3.274, 79.252])
    heading.scanTimes.push(13396)
    heading.scanData.push([-19.561, -3.2449, 79.267])
    heading.scanTimes.push(13412)
    heading.scanData.push([-19.917, -3.2096, 79.288])
    heading.scanTimes.push(13428)
    heading.scanData.push([-20.300, -3.1258, 79.306])
    heading.scanTimes.push(13444)
    heading.scanData.push([-20.636, -3.0825, 79.27])
    heading.scanTimes.push(13460)
    heading.scanData.push([-20.917, -3.0221, 79.197])
    heading.scanTimes.push(13476)
    heading.scanData.push([-21.200, -2.9486, 79.166])
    heading.scanTimes.push(13492)
    heading.scanData.push([-21.53, -2.8738, 79.162])
    heading.scanTimes.push(13508)
    heading.scanData.push([-21.871, -2.7403, 79.106])
    heading.scanTimes.push(13524)
    heading.scanData.push([-22.188, -2.5926, 79.0])
    heading.scanTimes.push(13540)
    heading.scanData.push([-22.484, -2.4644, 78.972])
    heading.scanTimes.push(13556)
    heading.scanData.push([-22.75, -2.3606, 78.986])
    heading.scanTimes.push(13572)
    heading.scanData.push([-23.000, -2.2457, 78.964])
    heading.scanTimes.push(13588)
    heading.scanData.push([-23.198, -2.1483, 78.907])
    heading.scanTimes.push(13604)
    heading.scanData.push([-23.40, -2.0318, 78.880])
    heading.scanTimes.push(13620)
    heading.scanData.push([-23.65, -1.8673, 78.855])
    heading.scanTimes.push(13636)
    heading.scanData.push([-23.875, -1.7372, 78.860])
    heading.scanTimes.push(13652)
    heading.scanData.push([-24.070, -1.6312, 78.856])
    heading.scanTimes.push(13668)
    heading.scanData.push([-24.260, -1.5613, 78.834])
    heading.scanTimes.push(13684)
    heading.scanData.push([-24.44, -1.4698, 78.833])
    heading.scanTimes.push(13700)
    heading.scanData.push([-24.599, -1.3283, 78.839])
    heading.scanTimes.push(13716)
    heading.scanData.push([-24.789, -1.1725, 78.791])
    heading.scanTimes.push(13732)
    heading.scanData.push([-25.002, -0.9979, 78.742])
    heading.scanTimes.push(13748)
    heading.scanData.push([-25.170, -0.8520, 78.756])
    heading.scanTimes.push(13764)
    heading.scanData.push([-25.330, -0.7316, 78.722])
    heading.scanTimes.push(13780)
    heading.scanData.push([-25.502, -0.5753, 78.633])
    heading.scanTimes.push(13796)
    heading.scanData.push([-25.659, -0.3940, 78.551])
    heading.scanTimes.push(13812)
    heading.scanData.push([-25.809, -0.241, 78.523])
    heading.scanTimes.push(13828)
    heading.scanData.push([-25.992, -0.08261, 78.476])
    heading.scanTimes.push(13844)
    heading.scanData.push([-26.18, 0.1082, 78.396])
    heading.scanTimes.push(13860)
    heading.scanData.push([-26.341, 0.2954, 78.361])
    heading.scanTimes.push(13876)
    heading.scanData.push([-26.484, 0.4928, 78.28])
    heading.scanTimes.push(13892)
    heading.scanData.push([-26.621, 0.6987, 78.153])
    heading.scanTimes.push(13908)
    heading.scanData.push([-26.719, 0.8734, 78.048])
    heading.scanTimes.push(13924)
    heading.scanData.push([-26.790, 1.0531, 77.952])
    heading.scanTimes.push(13940)
    heading.scanData.push([-26.874, 1.2494, 77.825])
    heading.scanTimes.push(13956)
    heading.scanData.push([-26.97, 1.4685, 77.716])
    heading.scanTimes.push(13972)
    heading.scanData.push([-27.064, 1.7072, 77.649])
    heading.scanTimes.push(13988)
    heading.scanData.push([-27.190, 1.9316, 77.615])
    heading.scanTimes.push(14004)
    heading.scanData.push([-27.337, 2.1363, 77.602])
    heading.scanTimes.push(14020)
    heading.scanData.push([-27.478, 2.3365, 77.55])
    heading.scanTimes.push(14036)
    heading.scanData.push([-27.567, 2.5586, 77.492])
    heading.scanTimes.push(14052)
    heading.scanData.push([-27.596, 2.7873, 77.392])
    heading.scanTimes.push(14068)
    heading.scanData.push([-27.622, 3.0025, 77.235])
    heading.scanTimes.push(14084)
    heading.scanData.push([-27.680, 3.2388, 77.12])
    heading.scanTimes.push(14100)
    heading.scanData.push([-27.751, 3.5131, 77.078])
    heading.scanTimes.push(14116)
    heading.scanData.push([-27.784, 3.8094, 76.99])
    heading.scanTimes.push(14132)
    heading.scanData.push([-27.780, 4.0857, 76.87])
    heading.scanTimes.push(14148)
    heading.scanData.push([-27.738, 4.3451, 76.760])
    heading.scanTimes.push(14164)
    heading.scanData.push([-27.673, 4.60, 76.646])
    heading.scanTimes.push(14180)
    heading.scanData.push([-27.615, 4.8606, 76.575])
    heading.scanTimes.push(14196)
    heading.scanData.push([-27.567, 5.1375, 76.515])
    heading.scanTimes.push(14212)
    heading.scanData.push([-27.498, 5.4159, 76.442])
    heading.scanTimes.push(14228)
    heading.scanData.push([-27.408, 5.7035, 76.315])
    heading.scanTimes.push(14244)
    heading.scanData.push([-27.333, 6.0046, 76.134])
    heading.scanTimes.push(14260)
    heading.scanData.push([-27.252, 6.306, 75.970])
    heading.scanTimes.push(14276)
    heading.scanData.push([-27.13, 6.6003, 75.839])
    heading.scanTimes.push(14292)
    heading.scanData.push([-26.987, 6.8491, 75.726])
    heading.scanTimes.push(14308)
    heading.scanData.push([-26.871, 7.1098, 75.617])
    heading.scanTimes.push(14324)
    heading.scanData.push([-26.737, 7.4128, 75.544])
    heading.scanTimes.push(14340)
    heading.scanData.push([-26.55, 7.7088, 75.496])
    heading.scanTimes.push(14356)
    heading.scanData.push([-26.433, 7.9523, 75.426])
    heading.scanTimes.push(14372)
    heading.scanData.push([-26.325, 8.1553, 75.303])
    heading.scanTimes.push(14388)
    heading.scanData.push([-26.154, 8.3737, 75.159])
    heading.scanTimes.push(14404)
    heading.scanData.push([-25.952, 8.5921, 74.994])
    heading.scanTimes.push(14420)
    heading.scanData.push([-25.74, 8.7850, 74.811])
    heading.scanTimes.push(14436)
    heading.scanData.push([-25.537, 9.0609, 74.690])
    heading.scanTimes.push(14452)
    heading.scanData.push([-25.364, 9.3761, 74.639])
    heading.scanTimes.push(14468)
    heading.scanData.push([-25.152, 9.6316, 74.592])
    heading.scanTimes.push(14484)
    heading.scanData.push([-24.89, 9.9047, 74.515])
    heading.scanTimes.push(14500)
    heading.scanData.push([-24.652, 10.166, 74.420])
    heading.scanTimes.push(14516)
    heading.scanData.push([-24.411, 10.378, 74.327])
    heading.scanTimes.push(14532)
    heading.scanData.push([-24.13, 10.586, 74.234])
    heading.scanTimes.push(14548)
    heading.scanData.push([-23.838, 10.781, 74.151])
    heading.scanTimes.push(14564)
    heading.scanData.push([-23.584, 10.986, 74.101])
    heading.scanTimes.push(14580)
    heading.scanData.push([-23.291, 11.21, 74.048])
    heading.scanTimes.push(14596)
    heading.scanData.push([-22.960, 11.39, 73.920])
    heading.scanTimes.push(14612)
    heading.scanData.push([-22.671, 11.5, 73.753])
    heading.scanTimes.push(14628)
    heading.scanData.push([-22.334, 11.708, 73.63])
    heading.scanTimes.push(14644)
    heading.scanData.push([-21.935, 11.924, 73.575])
    heading.scanTimes.push(14660)
    heading.scanData.push([-21.565, 12.180, 73.476])
    heading.scanTimes.push(14676)
    heading.scanData.push([-21.207, 12.433, 73.413])
    heading.scanTimes.push(14692)
    heading.scanData.push([-20.848, 12.657, 73.421])
    heading.scanTimes.push(14708)
    heading.scanData.push([-20.474, 12.848, 73.401])
    heading.scanTimes.push(14724)
    heading.scanData.push([-20.074, 12.984, 73.351])
    heading.scanTimes.push(14740)
    heading.scanData.push([-19.670, 13.12, 73.265])
    heading.scanTimes.push(14756)
    heading.scanData.push([-19.255, 13.284, 73.141])
    heading.scanTimes.push(14772)
    heading.scanData.push([-18.817, 13.428, 73.008])
    heading.scanTimes.push(14788)
    heading.scanData.push([-18.379, 13.578, 72.881])
    heading.scanTimes.push(14804)
    heading.scanData.push([-17.952, 13.702, 72.838])
    heading.scanTimes.push(14820)
    heading.scanData.push([-17.530, 13.816, 72.836])
    heading.scanTimes.push(14836)
    heading.scanData.push([-17.119, 13.952, 72.802])
    heading.scanTimes.push(14852)
    heading.scanData.push([-16.73, 14.063, 72.771])
    heading.scanTimes.push(14868)
    heading.scanData.push([-16.323, 14.118, 72.657])
    heading.scanTimes.push(14884)
    heading.scanData.push([-15.89, 14.156, 72.468])
    heading.scanTimes.push(14900)
    heading.scanData.push([-15.467, 14.224, 72.336])
    heading.scanTimes.push(14916)
    heading.scanData.push([-15.019, 14.338, 72.221])
    heading.scanTimes.push(14932)
    heading.scanData.push([-14.598, 14.441, 72.157])
    heading.scanTimes.push(14948)
    heading.scanData.push([-14.187, 14.516, 72.176])
    heading.scanTimes.push(14964)
    heading.scanData.push([-13.773, 14.585, 72.200])
    heading.scanTimes.push(14980)
    heading.scanData.push([-13.382, 14.627, 72.189])
    heading.scanTimes.push(14996)
    heading.scanData.push([-12.986, 14.660, 72.119])
    heading.scanTimes.push(15012)
    heading.scanData.push([-12.532, 14.709, 72.077])
    heading.scanTimes.push(15028)
    heading.scanData.push([-12.059, 14.741, 72.043])
    heading.scanTimes.push(15044)
    heading.scanData.push([-11.648, 14.757, 72.020])
    heading.scanTimes.push(15060)
    heading.scanData.push([-11.28, 14.778, 72.045])
    heading.scanTimes.push(15076)
    heading.scanData.push([-10.921, 14.784, 72.114])
    heading.scanTimes.push(15092)
    heading.scanData.push([-10.557, 14.757, 72.168])
    heading.scanTimes.push(15108)
    heading.scanData.push([-10.198, 14.713, 72.227])
    heading.scanTimes.push(15124)
    heading.scanData.push([-9.8244, 14.659, 72.285])
    heading.scanTimes.push(15140)
    heading.scanData.push([-9.4574, 14.590, 72.293])
    heading.scanTimes.push(15156)
    heading.scanData.push([-9.1160, 14.521, 72.306])
    heading.scanTimes.push(15172)
    heading.scanData.push([-8.7312, 14.451, 72.359])
    heading.scanTimes.push(15188)
    heading.scanData.push([-8.28, 14.381, 72.445])
    heading.scanTimes.push(15204)
    heading.scanData.push([-7.8929, 14.304, 72.464])
    heading.scanTimes.push(15220)
    heading.scanData.push([-7.510, 14.234, 72.444])
    heading.scanTimes.push(15236)
    heading.scanData.push([-7.116, 14.18, 72.444])
    heading.scanTimes.push(15252)
    heading.scanData.push([-6.7768, 14.090, 72.471])
    heading.scanTimes.push(15268)
    heading.scanData.push([-6.4262, 13.946, 72.515])
    heading.scanTimes.push(15284)
    heading.scanData.push([-6.0682, 13.802, 72.555])
    heading.scanTimes.push(15300)
    heading.scanData.push([-5.7608, 13.691, 72.612])
    heading.scanTimes.push(15316)
    heading.scanData.push([-5.4669, 13.589, 72.623])
    heading.scanTimes.push(15332)
    heading.scanData.push([-5.1858, 13.476, 72.582])
    heading.scanTimes.push(15348)
    heading.scanData.push([-4.8961, 13.340, 72.604])
    heading.scanTimes.push(15364)
    heading.scanData.push([-4.5395, 13.177, 72.695])
    heading.scanTimes.push(15380)
    heading.scanData.push([-4.1692, 13.022, 72.772])
    heading.scanTimes.push(15396)
    heading.scanData.push([-3.8310, 12.827, 72.849])
    heading.scanTimes.push(15412)
    heading.scanData.push([-3.5093, 12.597, 72.94])
    heading.scanTimes.push(15428)
    heading.scanData.push([-3.2491, 12.388, 73.04])
    heading.scanTimes.push(15444)
    heading.scanData.push([-2.9840, 12.196, 73.132])
    heading.scanTimes.push(15460)
    heading.scanData.push([-2.6506, 12.022, 73.277])
    heading.scanTimes.push(15476)
    heading.scanData.push([-2.3674, 11.829, 73.380])
    heading.scanTimes.push(15492)
    heading.scanData.push([-2.0741, 11.622, 73.417])
    heading.scanTimes.push(15508)
    heading.scanData.push([-1.7225, 11.432, 73.477])
    heading.scanTimes.push(15524)
    heading.scanData.push([-1.4149, 11.212, 73.55])
    heading.scanTimes.push(15540)
    heading.scanData.push([-1.1870, 10.933, 73.685])
    heading.scanTimes.push(15556)
    heading.scanData.push([-0.9912, 10.673, 73.825])
    heading.scanTimes.push(15572)
    heading.scanData.push([-0.7800, 10.448, 73.908])
    heading.scanTimes.push(15588)
    heading.scanData.push([-0.5807, 10.229, 73.984])
    heading.scanTimes.push(15604)
    heading.scanData.push([-0.3989, 10.030, 74.07])
    heading.scanTimes.push(15620)
    heading.scanData.push([-0.219, 9.8355, 74.174])
    heading.scanTimes.push(15636)
    heading.scanData.push([-0.06324, 9.6446, 74.285])
    heading.scanTimes.push(15652)
    heading.scanData.push([0.07354, 9.4171, 74.44])
    heading.scanTimes.push(15668)
    heading.scanData.push([0.2112, 9.1046, 74.553])
    heading.scanTimes.push(15684)
    heading.scanData.push([0.3369, 8.7678, 74.579])
    heading.scanTimes.push(15700)
    heading.scanData.push([0.4184, 8.4738, 74.643])
    heading.scanTimes.push(15716)
    heading.scanData.push([0.4671, 8.2050, 74.78])
    heading.scanTimes.push(15732)
    heading.scanData.push([0.5380, 7.8603, 74.902])
    heading.scanTimes.push(15748)
    heading.scanData.push([0.6088, 7.4818, 74.983])
    heading.scanTimes.push(15764)
    heading.scanData.push([0.6471, 7.1757, 75.089])
    heading.scanTimes.push(15780)
    heading.scanData.push([0.6692, 6.9157, 75.186])
    heading.scanTimes.push(15796)
    heading.scanData.push([0.7160, 6.6318, 75.308])
    heading.scanTimes.push(15812)
    heading.scanData.push([0.7778, 6.3343, 75.445])
    heading.scanTimes.push(15828)
    heading.scanData.push([0.7746, 6.015, 75.597])
    heading.scanTimes.push(15844)
    heading.scanData.push([0.7000, 5.6871, 75.734])
    heading.scanTimes.push(15860)
    heading.scanData.push([0.6060, 5.3999, 75.84])
    heading.scanTimes.push(15876)
    heading.scanData.push([0.513, 5.137, 75.97])
    heading.scanTimes.push(15892)
    heading.scanData.push([0.4561, 4.8187, 76.101])
    heading.scanTimes.push(15908)
    heading.scanData.push([0.3828, 4.4701, 76.1])
    heading.scanTimes.push(15924)
    heading.scanData.push([0.2441, 4.1513, 76.256])
    heading.scanTimes.push(15940)
    heading.scanData.push([0.0718, 3.8410, 76.376])
    heading.scanTimes.push(15956)
    heading.scanData.push([-0.1048, 3.5578, 76.452])
    heading.scanTimes.push(15972)
    heading.scanData.push([-0.2660, 3.2661, 76.495])
    heading.scanTimes.push(15988)
    heading.scanData.push([-0.4065, 2.9743, 76.522])
    heading.scanTimes.push(16004)
    heading.scanData.push([-0.5615, 2.6878, 76.626])
    heading.scanTimes.push(16020)
    heading.scanData.push([-0.7885, 2.3939, 76.772])
    heading.scanTimes.push(16036)
    heading.scanData.push([-1.0472, 2.0992, 76.885])
    heading.scanTimes.push(16052)
    heading.scanData.push([-1.2834, 1.8109, 76.983])
    heading.scanTimes.push(16068)
    heading.scanData.push([-1.5454, 1.554, 77.131])
    heading.scanTimes.push(16084)
    heading.scanData.push([-1.8365, 1.2937, 77.312])
    heading.scanTimes.push(16100)
    heading.scanData.push([-2.1218, 0.9768, 77.397])
    heading.scanTimes.push(16116)
    heading.scanData.push([-2.4284, 0.6358, 77.470])
    heading.scanTimes.push(16132)
    heading.scanData.push([-2.7537, 0.3314, 77.562])
    // now the North setting, followed by octant tests
    heading.testTimes.push(52288)
    heading.testData.push([0.1071, 2.4428, 76.757])
    heading.testTimes.push(69060)
    heading.testData.push([-8.3571, -3.3857, 78.514])
    heading.testTimes.push(79460)
    heading.testData.push([-19.2, -4.0285, 79.178])
    heading.testTimes.push(89956)
    heading.testData.push([-27.214, 0.6857, 77.892])
    heading.testTimes.push(101492)
    heading.testData.push([-26.957, 7.7571, 75.235])
    heading.testTimes.push(111980)
    heading.testData.push([-18.814, 14.207, 72.557])
    heading.testTimes.push(122260)
    heading.testData.push([-6.75, 15.15, 71.657])
    heading.testTimes.push(132976)
    heading.testData.push([0.8142, 9.3, 74.1])
    heading.testTimes.push(140164)
    heading.testData.push([0.1928, 2.1214, 76.607])
    heading.testTimes.push(149292)
    heading.testData.push([-8.3357, -3.2357, 78.428])
    heading.testTimes.push(160388)
    heading.testData.push([-19.242, -3.9214, 79.028])
    heading.testTimes.push(170320)
    heading.testData.push([-27.3, 0.45, 78.021])
    heading.testTimes.push(180084)
    heading.testData.push([-27.107, 8.1, 75])
    heading.testTimes.push(189716)
    heading.testData.push([-18.6, 13.778, 72.578])
    heading.testTimes.push(199332)
    heading.testData.push([-6.8785, 14.571, 71.978])
    heading.testTimes.push(209392)
    heading.testData.push([0.8571, 9.5357, 73.842])
}

input.onButtonPressed(Button.A, function () {
    performSetup()
})

input.onButtonPressed(Button.B, function () {
    measure()
})

input.onButtonPressed(Button.AB, function () {
    nextConfig()
})

let nextTask: Task
let config = Config.Capture // --> Config.Analyse when A+B pressed
for (let i = 0; i < 5; i++) {
    basic.clearScreen()
    basic.pause(100)
    // invite A+B press
    basic.showLeds(`
                    . . . . .
                    . # . # .
                    # # . # #
                    . # . # .
                    . . . . .
                    `)
}
let spinRPM = 0
